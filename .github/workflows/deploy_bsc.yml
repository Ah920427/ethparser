# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Deploy BSC

on:
  push:
    branches:
      - master
      - 'release-**'

jobs:
  # Wait for up to a minute for previous run to complete, abort if not done by then
  pre-ci:
    runs-on: ubuntu-latest
    timeout-minutes: 100
    steps:
      - name: 'Block Concurrent Executions'
        uses: softprops/turnstyle@v1
        with:
          poll-interval-seconds: 60
        env:
          GITHUB_TOKEN: ${{secrets.GITHUB_TOKEN}}
          
  build:

    runs-on: ubuntu-latest

    services:
      # Label used to access the service container
      postgres:
        # Docker Hub image
        image: postgres:12
        # Provide the password for postgres
        env:
          POSTGRES_PASSWORD: harvest
          POSTGRES_USER: harvest 
          POSTGRES_DB: harvest
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Set up JDK 1.11
        uses: actions/setup-java@v1
        with:
          java-version: 1.11

      - name: Build with Maven
        run: >
          mvn
          -Dethparser.web3Url="${{secrets.ETH_WEB3}}"
          -Dethparser.etherscanApiKey=${{secrets.ETHERSCAN_TOKEN}}
          -Dethparser.web3BscUrl="${{secrets.BSC_WEB3}}"
          -Dethparser.bscscanApiKey=${{secrets.BSCSCAN_TOKEN}}
          -Dspring.datasource.url=jdbc:postgresql://localhost:5432/harvest
          -Dspring.datasource.username=harvest
          -Dspring.datasource.password=harvest
          -B package -ff -T 1 --file pom.xml

          - name: Generate JaCoCo Badge
            id: jacoco
            uses: cicirello/jacoco-badge-generator@v2.0.1

          - name: Log coverage percentage
            run: |
              echo "coverage = ${{ steps.jacoco.outputs.coverage }}"
              echo "branch coverage = ${{ steps.jacoco.outputs.branches }}"

          - name: Commit the badge (if it changed)
            run: |
              if [[ `git status --porcelain` ]]; then
                git config --global user.name 'codecoverage'
                git config --global user.email 'codecoverage@users.noreply.github.com'
                git add -A
                git commit -m "Autogenerated JaCoCo coverage badge"
                git push
              fi

          - name: Upload JaCoCo coverage report
            uses: actions/upload-artifact@v2
            with:
              name: jacoco-report
              path: target/site/jacoco/
      
      - name: Prepare deploy to server
        uses: hughcube/deploy-action@1.0.0
        with: 
          ssh_private_key: ${{ secrets.SSH_KEY }}
            
      - name: Deploy to server
        run: |
          export SERVER=ethparser_bsc
          rsync -azv -e "ssh -J ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }}" dist/ ${{secrets.SSH_USER}}@$SERVER:./dist
          ssh -J ${{ secrets.SSH_USER }}@${{ secrets.SSH_HOST }} ${{secrets.SSH_USER}}@$SERVER "ls -la ./dist"
